services:
  database:
    image: postgres:12
    container_name: database
    ports:
      - "5333:5432"
    env_file:
      - .env.database
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d 
    networks:
      - journal-app

  redis: 
    image: redis:alpine
    ports:
      - "6380:6379"
    networks:
      - journal-app
  
  rabbitmq:
    image:  rabbitmq:3-management
    ports: 
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env.database
    networks:
      - journal-app

  caddy:
    image: caddy:2
    container_name: caddy-gateway
    ports:
      - "80:80" # change to port 80 
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      - users-api
      - journals-api
      - analysis-api
    networks:
      - journal-app
    
  
  users-api:
    build: ./Users/.
    container_name: users-api
    ports:
      - "3000:3000"
    depends_on:
      - database
      - rabbitmq
    env_file:
      - ./Users/.env.local
    command: npm run start:dev
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - journal-app
  
  journals-api:
    build: ./Journals/.
    container_name: journals-api
    ports:
      - "3001:3001"
    depends_on:
      - database
      - rabbitmq
    env_file:
      - ./Journals/.env.local
    command: npm run start:dev
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - journal-app

  analysis-api:
    build: ./Analysis/.
    container_name: analysis-api
    ports:
      - "3002:3002"
    depends_on:
      - database
      - rabbitmq
    env_file:
      - ./Analysis/.env.local
    command: npm run start:dev
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - journal-app

volumes:
  pgdata:

networks:
  journal-app:
    driver: bridge
    name: journal-app